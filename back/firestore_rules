rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // FUNCTIONS
    // isAuthor 
    function isAuthor() {
      return request.auth.uid == resource.data.author_id;
    }
    
    // User
    match /userconfs/{user} {
      allow create, read, update, delete: if request.auth.uid != null && request.auth.uid == user;
    }
    
    match /usercryptoconfs/{user} {
      allow create, read, update, delete: if request.auth.uid != null && request.auth.uid == user;
    }
    
    match /userusaconfs/{user} {
      allow create, read, update, delete: if request.auth.uid != null && request.auth.uid == user;
    }
    
    // FCM tokens
    match /fcmtokens/{user} {
      allow create, read, update, delete: if request.auth.uid != null && request.auth.uid == user;
    }
    
    // Instruments
    match /instruments/current {
      allow read: if request.auth.uid != null;
    }
    match /instruments/crypto {
      allow read: if request.auth.uid != null;
    }
    match /instruments/usa {
      allow read: if request.auth.uid != null;
    }
    match /weekly/{isin} {
      allow read: if request.auth.uid != null;
    }
    match /daily/{isin} {
      allow read: if request.auth.uid != null;
    }
    
    // Alerts
    match /alerts/{id} {
        allow create: if request.auth.uid != null;
        allow read, update, delete: if isAuthor();
    }
    match /alertscrypto/{id} {
        allow create: if request.auth.uid != null;
        allow read, update, delete: if isAuthor();
    }
    match /alertsusa/{id} {
        allow create: if request.auth.uid != null;
        allow read, update, delete: if isAuthor();
    }
  }
}